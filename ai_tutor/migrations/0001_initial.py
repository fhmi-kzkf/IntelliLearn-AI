# Generated by Django 5.2.5 on 2025-08-27 07:26

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AIGeneratedContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('quiz_question', 'Quiz Question'), ('course_material', 'Course Material'), ('explanation', 'Concept Explanation'), ('example', 'Code Example'), ('exercise', 'Practice Exercise'), ('feedback', 'Personalized Feedback')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('prompt', models.TextField(help_text='Prompt used to generate this content')),
                ('ai_model', models.CharField(help_text='AI model used', max_length=50)),
                ('generation_parameters', models.JSONField(default=dict, help_text='Parameters used for generation')),
                ('target_level', models.CharField(blank=True, choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], max_length=20)),
                ('topic_tags', models.JSONField(default=list, help_text='List of topic tags')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('review', 'Under Review'), ('approved', 'Approved'), ('published', 'Published'), ('rejected', 'Rejected')], default='draft', max_length=20)),
                ('quality_score', models.FloatField(blank=True, help_text='Auto-generated quality score (0-1)', null=True)),
                ('human_rating', models.PositiveIntegerField(blank=True, choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')], null=True)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(help_text='User who triggered the generation', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_content', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, help_text='User who reviewed the content', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_content', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AI Generated Content',
                'verbose_name_plural': 'AI Generated Content',
                'db_table': 'ai_generated_content',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AITutorSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('context_type', models.CharField(choices=[('general', 'General AI Questions'), ('course', 'Course-specific Help'), ('quiz', 'Quiz Assistance'), ('concept', 'Concept Explanation'), ('troubleshooting', 'Problem Solving')], default='general', max_length=20)),
                ('context_object_type', models.CharField(blank=True, help_text='Type of related object (course, quiz, etc.)', max_length=50)),
                ('context_object_id', models.PositiveIntegerField(blank=True, help_text='ID of related object', null=True)),
                ('title', models.CharField(blank=True, help_text='Auto-generated or user-set title', max_length=200)),
                ('status', models.CharField(choices=[('active', 'Active'), ('ended', 'Ended'), ('paused', 'Paused')], default='active', max_length=20)),
                ('total_messages', models.PositiveIntegerField(default=0)),
                ('user_satisfaction', models.PositiveIntegerField(blank=True, choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')], help_text='User rating for the session', null=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AI Tutor Session',
                'verbose_name_plural': 'AI Tutor Sessions',
                'db_table': 'ai_tutor_sessions',
                'ordering': ['-last_activity'],
            },
        ),
        migrations.CreateModel(
            name='AITutorMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender', models.CharField(choices=[('user', 'User'), ('ai', 'AI Tutor'), ('system', 'System')], max_length=10)),
                ('message_type', models.CharField(choices=[('text', 'Text Message'), ('code', 'Code Example'), ('explanation', 'Concept Explanation'), ('suggestion', 'Learning Suggestion'), ('feedback', 'Feedback'), ('quiz_hint', 'Quiz Hint')], default='text', max_length=20)),
                ('content', models.TextField()),
                ('formatted_content', models.TextField(blank=True, help_text='HTML formatted content')),
                ('ai_model', models.CharField(blank=True, help_text='AI model used for response', max_length=50)),
                ('prompt_tokens', models.PositiveIntegerField(default=0)),
                ('completion_tokens', models.PositiveIntegerField(default=0)),
                ('total_tokens', models.PositiveIntegerField(default=0)),
                ('was_helpful', models.BooleanField(blank=True, help_text='User feedback on AI response', null=True)),
                ('user_feedback', models.TextField(blank=True, help_text='Additional user feedback')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='ai_tutor.aitutorsession')),
            ],
            options={
                'verbose_name': 'AI Tutor Message',
                'verbose_name_plural': 'AI Tutor Messages',
                'db_table': 'ai_tutor_messages',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='PersonalizedRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendation_type', models.CharField(choices=[('course', 'Course Recommendation'), ('topic', 'Topic to Study'), ('review', 'Content to Review'), ('practice', 'Practice Exercise'), ('path', 'Learning Path')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('reason', models.TextField(help_text='Why this is recommended')),
                ('target_object_type', models.CharField(blank=True, max_length=50)),
                ('target_object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('confidence_score', models.FloatField(help_text='AI confidence in this recommendation (0-1)')),
                ('based_on_data', models.JSONField(default=dict, help_text='Data used to generate recommendation')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('viewed', 'Viewed'), ('accepted', 'Accepted'), ('dismissed', 'Dismissed'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('viewed_at', models.DateTimeField(blank=True, null=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('priority', models.PositiveIntegerField(default=5, help_text='1 (highest) to 10 (lowest)')),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Personalized Recommendation',
                'verbose_name_plural': 'Personalized Recommendations',
                'db_table': 'personalized_recommendations',
                'ordering': ['priority', '-created_at'],
            },
        ),
    ]
